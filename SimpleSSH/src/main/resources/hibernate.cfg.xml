<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <!-- 通常，一个session-factory节点代表一个数据库 -->
    <session-factory>

        <!-- 1. 数据库连接配置 -->
        <property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <!--Caused by: org.dom4j.DocumentException: Error on line 7 of document  : 对实体 "useSSL" 的引用必须以 ';' 分隔符结尾。 Nested exception: 对实体 "useSSL" 的引用必须以 ';' 分隔符结尾。-->
        <property name="hibernate.connection.url">jdbc:mysql:///mydatabase?serverTimezone=GMT%2B8&amp;useSSL=false</property>
        <property name="hibernate.connection.username">liyang</property>
        <property name="hibernate.connection.password">liyang</property>



        <!-- 【连接池配置】 -->
        <!-- 配置连接驱动管理类 -->
        <property name="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</property>
        <!-- 配置连接池参数信息 -->
        <property name="hibernate.c3p0.min_size">2</property>
        <property name="hibernate.c3p0.max_size">4</property>
        <property name="hibernate.c3p0.timeout">5000</property>
        <property name="hibernate.c3p0.max_statements">10</property>
        <property name="hibernate.c3p0.idle_test_period">30000</property>
        <property name="hibernate.c3p0.acquire_increment">2</property>

        <!--如果要使用getCurrentSession()，需要在配置文件中配置-->
        <!--配置线程Session-->
        <property name="hibernate.current_session_context_class">thread</property>


        <!--数据库方法配置， hibernate在运行的时候，会根据不同的方言生成符合当前数据库语法的sql-->
        <!--        <property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>-->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property>


        <!-- 2. 其他相关配置 -->
        <!-- 2.1 显示hibernate在运行时候执行的sql语句 -->
        <property name="hibernate.show_sql">true</property>
        <!-- 2.2 格式化sql -->
        <property name="hibernate.format_sql">true</property>
        <!-- 2.3 自动建表  -->
        <!--        create-drop 每次在创建sessionFactory时候执行创建表。当调用sesisonFactory的close方法的时候，删除表！-->
        <!--        create   每次都重新建表； 如果表已经存在就先删除再创建-->
        <!--        update  如果表不存在就创建； 表存在就不创建；-->
        <!--        validate (生成环境时候) 执行验证： 当映射文件的内容与数据库表结构不一样的时候就报错！-->
        <property name="hibernate.hbm2ddl.auto">update</property>


        <!--二级缓存默认不开启，需要手动开启-->
        <!-- a.  开启二级缓存 -->
        <property name="hibernate.cache.use_second_level_cache">true</property>
        <!-- b. 指定使用哪一个缓存框架(默认提供的) -->
        <property name="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</property>
        <!-- 开启查询缓存 -->
        <property name="hibernate.cache.use_query_cache">true</property>


        <!--3. 加载所有映射-->
        <mapping resource="hbm/Person.hbm.xml"/>



        <!-- c. 指定哪一些类，需要加入二级缓存 -->
<!--        <class-cache usage="read-write" class="com.noobyang.entity.Person"/>-->
        <!-- 集合缓存[集合缓存的元素对象，也加加入二级缓存] Hibernate默认是没有为集合数据设置二级缓存的 -->
<!--        <collection-cache usage="read-write" collection="com.noobyang.entity.Person"/>-->


    </session-factory>
    <!--    配置session-factory>标签是必须按照-->
    <!--    property*,mapping*,(class-cache|collection-cache),event,listener*这个顺序.不知道大家是否也犯过类此错误.-->

</hibernate-configuration>