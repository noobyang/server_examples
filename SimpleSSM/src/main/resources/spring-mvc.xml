<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven/>
    <!-- <context:component-scan base-package="*"/> -->

    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
    <mvc:resources mapping="/css/**" location="/static/css/"/>
    <mvc:resources mapping="/js/**" location="/static/js/"/>
    <mvc:resources mapping="/image/**" location="/static/images/"/>

    <!-- 扫描所有的controller 但是不扫描service -->
    <context:component-scan base-package="com.noobyang">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>


    <!--视图解析器-->
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <!--如果Action中书写的是视图逻辑名称，那么视图解析器就必须配置-->
    <!--如果Action中书写的是视图真实名称，那么视图解析器就可选配置-->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>


    <!--Warring: 打开下面的注释会导致 HelloAction 中的内容不好用-->
    <!--控制器-->
    <!--name属性的值表示的是请求的路径【也就是说，当用户请求到/helloAction时，就交由HelloAction类进行处理】-->
<!--    <bean name="/hello.action" class="com.noobyang.action.HelloAction"/>-->

    <!--映射器【可省略】 -->
    <!--当我们需要多个请求路径都交由helloAction控制器来处理的话，我们只要添加prop标签就行了-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
<!--        <property name="mappings">-->
<!--            <props>-->
<!--                <prop key="/hi.action">helloAction</prop>-->
<!--                <prop key="/bye.action">helloAction</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->
<!--    <bean id="helloAction" class="com.noobyang.action.HelloAction2"/>-->


    <!-- 适配器【可省略】 -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>



    <!-- 专用于 jsp 到 jsp/html 的转发控制器 -->
    <bean name="/ok.action" class="org.springframework.web.servlet.mvc.ParameterizableViewController">
        <!-- 转发到真实视图名 -->
        <property name="viewName" value="ok"/>
    </bean>


    <!-- 转换器 -->
    <bean id="conversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.noobyang.action.CustomDateConverter"/>
                <bean class="com.noobyang.action.StringTrimConverter"/>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven conversion-service="conversionServiceFactoryBean"/>


    <!--org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'multipartResolver':-->
    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为5MB -->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>



    <!-- 校验错误信息配置文件 -->



    <!-- 定义统一异常处理器 -->
    <bean class="com.noobyang.action.CustomExceptionResolver"/>



    <!--拦截器 -->
    <mvc:interceptors>
        <!--多个拦截器,顺序执行 -->
        <!-- <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.noobyang.action.HandlerInterceptor1"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.noobyang.action.HandlerInterceptor2"></bean>
        </mvc:interceptor> -->

        <mvc:interceptor>
            <!-- /**可以拦截路径不管多少层 -->
            <mvc:mapping path="/**" />
            <bean class="com.noobyang.action.HandlerInterceptor1"/>
        </mvc:interceptor>
    </mvc:interceptors>



    <!--要放到最底下-->
    <!--这句要加上，要不然可能会访问不到静态资源，具体作用自行百度-->
    <mvc:default-servlet-handler/>



</beans>