<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>

<!--    2. 常亮配置-->
    <!-- 0. 请求数据编码 -->
    <constant name="struts.i18n.encoding" value="UTF-8"/>
    <!-- 1. 修改Struts默认的访问后缀 -->
<!--    也就是说，“,”号能够匹配空格键-->
<!--    如果配置后缀为action。那么后缀一定要写action-->
<!--    如果配置后缀为action,do,。那么后缀可以是action，可以是do，也可以不写-->
<!--    如果配置后缀为action,,。那么后缀可以是action，可以不写-->
    <constant name="struts.action.extension" value="action,do,"/>
    <!-- 2. 修改xml自动重新加载 -->
    <constant name="struts.configuration.xml.reload" value="true"/>
    <!-- 3. 开启动态方法调用 (默认不开启)-->
    <constant name="struts.enable.DynamicMethodInvocation" value="true"/>
    <!-- 4. 修改上传文件的最大大小为30M -->
    <constant name="struts.multipart.maxSize" value="31457280"/>

<!--        <action name="login" class="com.noobyang.action.PrivilegeAction" method="login">-->
<!--            <result name="success">success.jsp</result>-->
<!--        </action>-->

<!--        <action name="register" class="com.noobyang.action.PrivilegeAction" method="register">-->
<!--            <result name="success">success.jsp</result>-->
<!--        </action>-->


<!--    1. 通配符使用-->
<!--    name=privilege_*，我们用了_作为分隔符。*就是我们的通配符-->
<!--    {1}，就是代表着第一个通配符-->
    <package name="noobyang" extends="struts-default" strict-method-invocation="false">

<!--        3. 全局跳转-->
        <global-results>
            <result name="success">success.jsp</result>
        </global-results>

<!--        4. 如果不写class，class默认执行的action在struts-default有配置<default-class-ref class="com.opensymphony.xwork2.ActionSupport" />-->
<!--        什么时候会不写class？就是需要跳转到WEB-INF目录下的资源的时候-->
<!--        这就类似与Servlet需要跳转到WEB-INF下的资源。【Tomcat不允许直接访问WEB-INF资源】-->
        <action name="privilege_*" class="com.noobyang.action.PrivilegeAction" method="{1}">
<!--            3. 全局跳转-->
<!--            <result name="success">success.jsp</result>-->
        </action>

    </package>

    <package name="noobyang1" extends="struts-default">

        <action name="register" class="com.noobyang.action.ParamsAction" method="register">
            <result name="success">success.jsp</result>
            <result name="input">error.jsp</result>
        </action>

        <action name="upload" class="com.noobyang.action.UploadAction" method="upload">
            <result name="success">success.jsp</result>
        </action>

        <action name="down_*" class="com.noobyang.action.DownloadAction" method="{1}">
            <result name="{1}">download.jsp</result>
            <result name="downLoad" type="stream">
                <!--运行下载的类型，指定为所有的二进制文件-->
                <param name="contentType">application/octet-stream</param>
                <!-- 对应的是Action中属性： 返回流的属性【其实就是getAttrInputStream()】 -->
                <param name="inputName">attrInputStream</param>
                <!-- 下载头，包括：浏览器显示的文件名 -->               <!--${}这里不是EL表达式-->
                <param name="contentDisposition">attachment;filename=${downFileName}</param>
                <!-- 缓冲区大小设置 -->
                <param name="bufferSize">1024</param>
            </result>
        </action>

        <action name="modeldriven" class="com.noobyang.action.ModelDrivenAction" method="execute">
            <result name="success">success.jsp</result>
            <result name="input">error.jsp</result>
        </action>

    </package>

    <package name="noobyang2" extends="struts-default" >

        <interceptors>
            <!--配置用户自定义的拦截器-->
            <interceptor name="CustomInterceptor" class="com.noobyang.interceptor.CustomInterceptor"/>

            <!--自定义拦截器栈，我们配置了自定义的拦截器，默认的拦截器栈就不会被执行，因此，想要使用默认的拦截器功能，就要配置进来-->
            <interceptor-stack name="mystack">
                <!--引用默认的拦截器栈，一定要放在第一行-->
                <interceptor-ref name="defaultStack"/>

                <!--引用自定义的拦截器-->
                <interceptor-ref name="CustomInterceptor"/>
            </interceptor-stack>
        </interceptors>

        <!--上面配置了拦截器栈，但是没有被执行...下面配置执行拦截器-->
        <default-interceptor-ref name="mystack"/>

        <action name="interceptor" class="com.noobyang.action.InterceptorAction" method="test">
            <result name="success">success.jsp</result>

        </action>

    </package>


</struts>